funMap n = map (*2) [1..n]

funR :: Integer -> [Integer]
funR n = foldr (\x acc -> (*2) x : acc) [] [1..n]

funL :: Integer -> [Integer]
funL n = foldl (\acc x -> acc ++ [(*2) x]) [] [1..n]

-- реализация функции map через foldr явно лучше, 
-- так как в ней используется сравнительно дешевая операция
-- а именно ":" - добавление элемента в начало списка
-- в реализации через foldl приходится использовать
-- функцию конкатенации "++" - которая значительно дороже
